"""
Архитектурная часть Представление (View).

Отвечает за интерфейс, который видит пользователь, и с которым он взаимодействует.
"""

class UserInterface:
    """
   Класс, содержащий "вьюхи", которые описывают как должна выглядеть та или иная
   страница интерфейса.
   """
    @staticmethod
    def wait_user_answer():
        """
        Показывает страницу выбора действий пользователя.

        Возвращает user_answer как выбор пользователя.
        """
        print(' Ввод пользователя '.center(40, '*'))
        print('Что хотим сделать со статьями?')
        print('Возможные варианты:'
              '\n1 - добавить статью'
              '\n2 - удалить статью'
              '\n3 - посмотреть статью'
              '\n4 - посмотреть все статьи'
              '\nq - выйти из программы')
        user_answer = input('Выберите вариант действия: ')
        print('*' * 40)
        return user_answer

    @staticmethod
    def add_user_article():
        """
        Показывает страницу, где пользователь формирует
        статью, чтобы добавить её в базу статей.

        Сначала формируется словарь dict_article с ключами,
        но пустыми значениями. Затем в цикле пользователь
        по очереди заполняет каждое поле будущего объекта статьи.
        В итоге метод возвращает заполненный словарь, на основе
        которого в Модели будет создан объект статьи.
        """
        dict_article = {
            'Название': None,
            'Автор': None,
            'Количество страниц': None,
            'Источник': None,
            'Описание': None,
        }
        print(' Добавление статьи '.center(40, '*'))
        for key in dict_article:
            dict_article[key] = input(f'Введите {key} статьи: ')
        print('*' * 40)
        return dict_article

    def get_user_article(self):
        """
        Показывает страницу, где пользователь вводит название статьи.
        """
        print(' Ввод названия статьи '.center(40, '*'))
        user_title = input('Введите название статьи: ')
        print('*' * 40)
        return user_title

    def show_user_article(self, article):
        """
        Показывает страницу показа конкретной статьи.

        Принимает article как словарь, затем в цикле выводит каждый
        параметр объекта статьи.
        """
        print(' Информация о статье '.center(40, '*'))
        for key in article:
            print(f'{key} статьи:\n{article[key]}')
        print('*' * 40)

    def user_show_all_articles(self, articles):
        """
        Показывает страницу показа всех статей.

        Принимает articles как список, затем в цикле выводит каждую
        статью и нумеруя их.
        """
        print(' Все статьи '.center(40, '*'))
        if articles:
            for idx, article in enumerate(articles, start=1):
                print(f'{idx}. {article}')
        else:
            print('Статей нет!')
        print('*' * 40)

    def show_incorrect_answer_error(self, answer):
        """
        Показывает страницу с ошибкой о том, что была введена
        неправильная команда.
        """
        print(' ОШИБКА: Неправильный ввод! '.center(40, '*'))
        print(f'Действия {answer} не существует!')
        print('*' * 40)

    def show_incorrect_title_error(self, title):
        """
        Показывает страницу с ошибкой о том, что было введено
        несуществующее название статьи.
        """
        print(' ОШИБКА: Неправильное название статьи! '.center(40, '*'))
        print(f'Статьи {title} не существует!')
        print('*' * 40)
